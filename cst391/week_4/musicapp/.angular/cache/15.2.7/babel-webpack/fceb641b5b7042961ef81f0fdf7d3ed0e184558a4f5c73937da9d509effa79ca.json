{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Album } from '../models/albums.model';\nimport { Track } from '../models/tracks.model';\nlet CreateAlbumComponent = class CreateAlbumComponent {\n  constructor(service) {\n    this.service = service;\n    this.album = new Album(Math.floor(Math.random() * 1000000), \"\", \"\", \"\", \"\", \"\", []);\n    this.tracksRaw = \"\";\n    this.wasSubmitted = false;\n  }\n  onSubmit() {\n    const tracks = this.parseTracks(this.tracksRaw);\n    this.album.Tracks = tracks;\n    const status = this.service.createAlbum(this.album);\n    console.log('The return from createAlbum() was ' + status);\n    this.wasSubmitted = true;\n  }\n  parseTracks(rawTracks) {\n    const tracks = [];\n    const lines = rawTracks.split('\\n');\n    lines.forEach((line, index) => {\n      const [title, lyrics, video] = line.split(':');\n      tracks.push(new Track(Math.floor(Math.random() * 1000000), index + 1, title, lyrics || '', video || ''));\n    });\n    return tracks;\n  }\n};\nCreateAlbumComponent = __decorate([Component({\n  selector: 'app-create-album',\n  templateUrl: './create-album.component.html',\n  styleUrls: ['./create-album.component.css']\n})], CreateAlbumComponent);\nexport { CreateAlbumComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,KAAK,QAAQ,wBAAwB;AAC9C,SAASC,KAAK,QAAQ,wBAAwB;AAQvC,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAO/BC,YAAoBC,OAA4B;IAA5B,YAAO,GAAPA,OAAO;IAJ3B,UAAK,GAAU,IAAIJ,KAAK,CAACK,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACrF,cAAS,GAAU,EAAE;IACrB,iBAAY,GAAW,KAAK;EAEwB;EAE7CC,QAAQ;IACb,MAAMC,MAAM,GAAY,IAAI,CAACC,WAAW,CAAC,IAAI,CAACC,SAAS,CAAC;IACxD,IAAI,CAACC,KAAK,CAACC,MAAM,GAAGJ,MAAM;IAC1B,MAAMK,MAAM,GAAG,IAAI,CAACV,OAAO,CAACW,WAAW,CAAC,IAAI,CAACH,KAAK,CAAC;IACnDI,OAAO,CAACC,GAAG,CAAC,oCAAoC,GAAGH,MAAM,CAAC;IAC1D,IAAI,CAACI,YAAY,GAAG,IAAI;EAC1B;EAEQR,WAAW,CAACS,SAAiB;IACnC,MAAMV,MAAM,GAAY,EAAE;IAC1B,MAAMW,KAAK,GAAGD,SAAS,CAACE,KAAK,CAAC,IAAI,CAAC;IAEnCD,KAAK,CAACE,OAAO,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAI;MAC5B,MAAM,CAACC,KAAK,EAAEC,MAAM,EAAEC,KAAK,CAAC,GAAGJ,IAAI,CAACF,KAAK,CAAC,GAAG,CAAC;MAC9CZ,MAAM,CAACmB,IAAI,CACT,IAAI3B,KAAK,CACPI,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,OAAO,CAAC,EACnCiB,KAAK,GAAG,CAAC,EACTC,KAAK,EACLC,MAAM,IAAI,EAAE,EACZC,KAAK,IAAI,EAAE,CACZ,CACF;IACH,CAAC,CAAC;IAEF,OAAOlB,MAAM;EACf;CACD;AApCYP,oBAAoB,eALhCH,SAAS,CAAC;EACT8B,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,GACW7B,oBAAoB,CAoChC;SApCYA,oBAAoB","names":["Component","Album","Track","CreateAlbumComponent","constructor","service","Math","floor","random","onSubmit","tracks","parseTracks","tracksRaw","album","Tracks","status","createAlbum","console","log","wasSubmitted","rawTracks","lines","split","forEach","line","index","title","lyrics","video","push","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/cv64/git/cv64/gcu/week3/src/app/create-album/create-album.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Album } from '../models/albums.model';\nimport { Track } from '../models/tracks.model';\nimport { MusicServiceService } from '../services/music-service.service';\n\n@Component({\n  selector: 'app-create-album',\n  templateUrl: './create-album.component.html',\n  styleUrls: ['./create-album.component.css']\n})\nexport class CreateAlbumComponent implements OnInit\n{\n\n  album: Album = new Album(Math.floor(Math.random() * 1000000), \"\", \"\", \"\", \"\", \"\", []);\n  tracksRaw:string = \"\";\n  wasSubmitted:boolean = false;\n\n  constructor(private service: MusicServiceService) { }\n\n  public onSubmit() {\n    const tracks: Track[] = this.parseTracks(this.tracksRaw);\n    this.album.Tracks = tracks;\n    const status = this.service.createAlbum(this.album);\n    console.log('The return from createAlbum() was ' + status);\n    this.wasSubmitted = true;\n  }\n\n  private parseTracks(rawTracks: string): Track[] {\n    const tracks: Track[] = [];\n    const lines = rawTracks.split('\\n');\n\n    lines.forEach((line, index) => {\n      const [title, lyrics, video] = line.split(':');\n      tracks.push(\n        new Track(\n          Math.floor(Math.random() * 1000000),\n          index + 1,\n          title,\n          lyrics || '',\n          video || ''\n        )\n      );\n    });\n\n    return tracks;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}